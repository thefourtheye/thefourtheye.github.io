<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[thefourtheye's weblog]]></title>
  <link href="http://thefourtheye.in/atom.xml" rel="self"/>
  <link href="http://thefourtheye.in/"/>
  <updated>2018-05-09T17:36:38+05:30</updated>
  <id>http://thefourtheye.in/</id>
  <author>
    <name><![CDATA[Sakthipriyan Vairamani (thefourtheye)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Emacs - Cheat Sheet]]></title>
    <link href="http://thefourtheye.in/2017/05/21/emacs-cheat-sheet/"/>
    <updated>2017-05-21T21:37:45+05:30</updated>
    <id>http://thefourtheye.in/2017/05/21/emacs-cheat-sheet</id>
    <content type="html"><![CDATA[<p>After having been in the vim camp in the <a href="https://en.wikipedia.org/wiki/Editor_war">vim vs Emacs editor war</a> for eight years, I decided to peek into the enemy’s camp. The IDE users might look down upon the editor users, but I still enjoy using my keyboard to do all the coding work. That is the reason why I chose to learn Emacs over an IDE.</p>

<p>When I started with Emacs, it was kind of scary. Editing text is straight forward, as in, it didn’t require me to change the mode like in Vim. But the control key sequences are way too much to remember compared to Vim. So I decided to understand the keys which are commonly used to move around the text in the screen, with the help of Emacs Tutorial (<code>Ctrl+h t</code>).</p>

<p>This cheat sheet has a few more key combinations which are used to do common operations on Emacs.</p>

<p><strong>Note:</strong> From now on, the <code>Ctrl</code> key will be represented as <code>C</code> and the <code>Alt</code> key (also called as <code>Meta</code> key) will be represented as <code>M</code>. For example, if the actual command is to press both <code>Ctrl</code> and <code>h</code> keys to invoke the help, then it would be written as <code>C-h</code>.</p>

<h2 id="common-operations">Common Operations</h2>

<table class="gridtable">
  <thead>
    <tr>
      <th>Key Combinations</th>
      <th>Functionality</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>C-x C-c</code></td>
      <td>Quit Emacs</td>
    </tr>
    <tr>
      <td><code>C-h t</code></td>
      <td>Open built-in Emacs Tutorial file</td>
    </tr>
    <tr>
      <td><code>C-x C-f</code></td>
      <td>Open a File</td>
    </tr>
    <tr>
      <td><code>C-x k</code></td>
      <td>Close the currently opened file on screen</td>
    </tr>
    <tr>
      <td><code>C-x C-s</code></td>
      <td>Save the currently opened file</td>
    </tr>
    <tr>
      <td><code>C-x s</code></td>
      <td>Save all the open files</td>
    </tr>
    <tr>
      <td><code>C-g</code></td>
      <td>Discard the current command</td>
    </tr>
  </tbody>
</table>

<h2 id="split-window-operations">Split Window Operations</h2>

<table class="gridtable">
  <thead>
    <tr>
      <th>Key Combinations</th>
      <th>Functionality</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>C-x 2</code></td>
      <td>Split the view horizontally</td>
    </tr>
    <tr>
      <td><code>C-x 3</code></td>
      <td>Split the view vertically</td>
    </tr>
    <tr>
      <td><code>C-x o</code> (English letter “o”)</td>
      <td>Switch to next split window</td>
    </tr>
    <tr>
      <td><code>C-x 0</code> (Number Zero)</td>
      <td>Kill the current window</td>
    </tr>
    <tr>
      <td><code>C-x 1</code></td>
      <td>Kill all other split windows except current window</td>
    </tr>
    <tr>
      <td><code>C-x C-b</code></td>
      <td>List all open files in a new split window</td>
    </tr>
    <tr>
      <td><code>C-x b</code></td>
      <td>Bring any of the open files to the front, by name</td>
    </tr>
  </tbody>
</table>

<h2 id="cursor-movement">Cursor Movement</h2>

<table class="gridtable">
  <thead>
    <tr>
      <th>Key Combinations</th>
      <th>Functionality</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>C-b</code></td>
      <td>Move one character backward</td>
    </tr>
    <tr>
      <td><code>M-b</code></td>
      <td>Move one word backward</td>
    </tr>
    <tr>
      <td><code>C-f</code></td>
      <td>Move one character forward</td>
    </tr>
    <tr>
      <td><code>M-f</code></td>
      <td>Move one word forward</td>
    </tr>
    <tr>
      <td><code>C-v</code></td>
      <td>Scroll one page full of information forward</td>
    </tr>
    <tr>
      <td><code>M-v</code></td>
      <td>Scroll one page full of information backward</td>
    </tr>
    <tr>
      <td><code>C-a</code></td>
      <td>Beginning of current line</td>
    </tr>
    <tr>
      <td><code>M-a</code></td>
      <td>Beginning of current sentence</td>
    </tr>
    <tr>
      <td><code>C-e</code></td>
      <td>Ending of current line</td>
    </tr>
    <tr>
      <td><code>M-e</code></td>
      <td>Ending of current sentence</td>
    </tr>
    <tr>
      <td><code>M-&gt;</code></td>
      <td>End of file</td>
    </tr>
    <tr>
      <td><code>M-&lt;</code></td>
      <td>Beginning of file</td>
    </tr>
    <tr>
      <td><code>C-n</code></td>
      <td>Next line</td>
    </tr>
    <tr>
      <td><code>C-p</code></td>
      <td>Previous line</td>
    </tr>
    <tr>
      <td><code>C-l</code></td>
      <td>Move the current line to bottom, middle, and start of screen</td>
    </tr>
  </tbody>
</table>

<h2 id="edit-operations">Edit Operations</h2>

<table class="gridtable">
  <thead>
    <tr>
      <th>Key Combinations</th>
      <th>Functionality</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>C-x u</code> <code>C-/</code></td>
      <td>Undo last operation</td>
    </tr>
    <tr>
      <td><code>C-k</code></td>
      <td>Delete till the end of the current line from current position</td>
    </tr>
    <tr>
      <td><code>M-k</code></td>
      <td>Delete till the end of the current sentence from current position</td>
    </tr>
    <tr>
      <td><code>C-d</code></td>
      <td>Delete the next character</td>
    </tr>
    <tr>
      <td><code>M-d</code></td>
      <td>Delete the next word</td>
    </tr>
    <tr>
      <td><code>C-&lt;Del&gt;</code></td>
      <td>Delete the previous character</td>
    </tr>
    <tr>
      <td><code>M-&lt;Del&gt;</code></td>
      <td>Delete the previous word</td>
    </tr>
  </tbody>
</table>

<h2 id="copy-and-paste">Copy and Paste</h2>

<table class="gridtable">
  <thead>
    <tr>
      <th>Key Combinations</th>
      <th>Functionality</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>C-&lt;Space&gt;</code></td>
      <td>Set mark to select text. Now with movement keys select the text</td>
    </tr>
    <tr>
      <td><code>C-x h</code></td>
      <td>Select the whole buffer</td>
    </tr>
    <tr>
      <td><code>C-w</code></td>
      <td>Cut the selected text</td>
    </tr>
    <tr>
      <td><code>M-w</code></td>
      <td>Copy the selected text</td>
    </tr>
    <tr>
      <td><code>C-y</code></td>
      <td>Yank (paste) the selected text</td>
    </tr>
  </tbody>
</table>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript Lookbehind RegEx Alternative]]></title>
    <link href="http://thefourtheye.in/2017/02/21/javascript-lookbehind-regex-alternative/"/>
    <updated>2017-02-21T21:33:13+05:30</updated>
    <id>http://thefourtheye.in/2017/02/21/javascript-lookbehind-regex-alternative</id>
    <content type="html"><![CDATA[<p>Recently one of my colleagues came to me with a problem. He had a string which looked like JSON but not a valid JSON string. For example,</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="js"><span class="line"><span class="p">[{</span><span class="err">\</span><span class="s2">&quot;name\&quot;:\&quot;Kilua\&quot;\\,\&quot;age\&quot;:35}],{\&quot;city\&quot;:\&quot;SJC\&quot;},\&quot;US\&quot;</span>
</span></code></pre></td></tr></table></div></figure>

<p>and they wanted to split the string at all the commas, except when they are preceded by a backslash. That means, they wanted</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="js"><span class="line"><span class="p">[</span> <span class="s1">&#39;[{&quot;name&quot;:&quot;Kilua&quot;\\,&quot;age&quot;:35}]&#39;</span><span class="p">,</span> <span class="s1">&#39;{&quot;city&quot;:&quot;SJC&quot;},&quot;US&quot;&#39;</span> <span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>

<p>as output. If the requirement was to split the string at commas followed by a certain string, then it would have been pretty straight forward. For example, if the string is <code>a,1,b,2,c,3</code> and if they wanted to split the string at all commas except when they are not followed by numbers, then the solution would have been very simple, with negative lookahead, like this</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="js"><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;a,1,b,2,c,3&#39;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/,(?!\d)/</span><span class="p">));</span>
</span><span class="line"><span class="c1">// [ &#39;a,1&#39;, &#39;b,2&#39;, &#39;c,3&#39; ]</span>
</span></code></pre></td></tr></table></div></figure>

<p>Since JavaScript doesn’t have lookbehinds, we don’t have a straight forward solution to this problem. When I searched Stackoverflow, I found this solution</p>

<figure class="code"><figcaption><span>WTK's answer in Stackoverflow</span><a href="">link</a></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="js"><span class="line"><span class="s1">&#39;a\\,bcde,fgh,ijk\\,lmno,pqrst\\,uv&#39;</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([^\\]),/g</span><span class="p">,</span> <span class="s1">&#39;$1\u000B&#39;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;\u000B&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

<p>This solves the exact same problem which my colleague was facing. It compensates the absence of lookbehinds by breaking down the problem in two steps.</p>

<ol>
  <li>Replace all the commas matching the condition with a marker string which does not appear anywhere in the string. (<code>\u000B</code> in this case)</li>
  <li>Then split the original string with the marker string.</li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JS Quirks: Stringified Numbers]]></title>
    <link href="http://thefourtheye.in/2016/11/15/js-quirks-stringified-numbers/"/>
    <updated>2016-11-15T00:38:30+05:30</updated>
    <id>http://thefourtheye.in/2016/11/15/js-quirks-stringified-numbers</id>
    <content type="html"><![CDATA[<p>When I was working on <a href="https://github.com/nodejs/node/pull/9492">Node.js PR 9492</a>, <a href="https://github.com/nodejs/node/pull/9492#discussion_r86987446">this comment</a></p>

<blockquote>
  <p>This should probably test for a wider range of values. <code>test/parallel/test-net-internal.js</code> has some good examples.</p>
</blockquote>

<p>made me look at <a href="https://github.com/nodejs/node/blob/fc44bd4d0b984f7b926b8c92b8e9a88da1c08921/test/parallel/test-net-internal.js">that file</a>. As I was going through the test, few of the bad values were interesting. I normally test with stringified positive decimal numbers and negative decimal numbers. But I saw stringified negative octal, binary, and hexa decimal numbers.</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="js"><span class="line"><span class="kr">const</span> <span class="nx">bad</span> <span class="o">=</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="p">{},</span> <span class="p">[],</span> <span class="kc">false</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="mh">0xFFFF</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="kc">Infinity</span><span class="p">,</span>
</span><span class="line">             <span class="o">-</span><span class="kc">Infinity</span><span class="p">,</span> <span class="kc">NaN</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="s1">&#39;0x&#39;</span><span class="p">,</span>
</span><span class="line">             <span class="s1">&#39;-0x1&#39;</span><span class="p">,</span> <span class="s1">&#39;-0o1&#39;</span><span class="p">,</span> <span class="s1">&#39;-0b1&#39;</span><span class="p">,</span> <span class="s1">&#39;0o&#39;</span><span class="p">,</span> <span class="s1">&#39;0b&#39;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>

<p>I got curious as I have never used them before, I just wanted to see their corresponding negative values. So I wrote a program like this</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="js"><span class="line"><span class="p">[</span><span class="o">-</span><span class="mh">0x1</span><span class="p">,</span> <span class="s1">&#39;-0x1&#39;</span><span class="p">,</span> <span class="o">-</span><span class="mi">0</span><span class="nx">o1</span><span class="p">,</span> <span class="s1">&#39;-0o1&#39;</span><span class="p">,</span> <span class="o">-</span><span class="mi">0</span><span class="nx">b1</span><span class="p">,</span> <span class="s1">&#39;-0b1&#39;</span><span class="p">].</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">item</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">item</span><span class="p">,</span> <span class="o">+</span><span class="nx">item</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>

<p>and I was expecting to see the result</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="text"><span class="line">-1 -1
</span><span class="line">-0x1 -1
</span><span class="line">-1 -1
</span><span class="line">-0o1 -1
</span><span class="line">-1 -1
</span><span class="line">-0b1 -1
</span></code></pre></td></tr></table></div></figure>

<p>but all I got was</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="text"><span class="line">-1 -1
</span><span class="line">-0x1 NaN
</span><span class="line">-1 -1
</span><span class="line">-0o1 NaN
</span><span class="line">-1 -1
</span><span class="line">-0b1 NaN
</span></code></pre></td></tr></table></div></figure>

<p>The unary - operator simply negates the magnitude of the numbers. The stringified numbers were not processed in the same way as their number counterparts. So I looked at the ECMAScript specification’s <a href="http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber-applied-to-the-string-type">ToNumber Applied to the String Type</a> section (which is actually responsible for converting strings to numbers).</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="text"><span class="line">StrNumericLiteral :::
</span><span class="line">    StrDecimalLiteral
</span><span class="line">    BinaryIntegerLiteral
</span><span class="line">    OctalIntegerLiteral
</span><span class="line">    HexIntegerLiteral
</span><span class="line">...
</span><span class="line">...
</span><span class="line">StrDecimalLiteral :::
</span><span class="line">    StrUnsignedDecimalLiteral
</span><span class="line">    + StrUnsignedDecimalLiteral
</span><span class="line">    - StrUnsignedDecimalLiteral
</span></code></pre></td></tr></table></div></figure>

<p>Only the <code>StrDecimalLiteral</code> production allows signed numbers. If we look at the definition of others in the <a href="http://www.ecma-international.org/ecma-262/6.0/#sec-literals-numeric-literals">Numeric Literals</a> section,</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="text"><span class="line">BinaryIntegerLiteral ::
</span><span class="line">    0b BinaryDigits
</span><span class="line">    0B BinaryDigits
</span><span class="line">
</span><span class="line">BinaryDigits ::
</span><span class="line">    BinaryDigit
</span><span class="line">    BinaryDigits BinaryDigit
</span><span class="line">
</span><span class="line">BinaryDigit :: one of
</span><span class="line">    0 1
</span><span class="line">
</span><span class="line">OctalIntegerLiteral ::
</span><span class="line">    0o OctalDigits
</span><span class="line">    0O OctalDigits
</span><span class="line">
</span><span class="line">OctalDigits ::
</span><span class="line">    OctalDigit
</span><span class="line">    OctalDigits OctalDigit
</span><span class="line">
</span><span class="line">OctalDigit :: one of
</span><span class="line">    0 1 2 3 4 5 6 7
</span><span class="line">
</span><span class="line">HexIntegerLiteral ::
</span><span class="line">    0x HexDigits
</span><span class="line">    0X HexDigits
</span><span class="line">
</span><span class="line">HexDigits ::
</span><span class="line">    HexDigit
</span><span class="line">    HexDigits HexDigit
</span><span class="line">
</span><span class="line">HexDigit :: one of
</span><span class="line">    0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F
</span></code></pre></td></tr></table></div></figure>

<p>So, as per the specification, only the decimal numbers can have signs in the stringified number form. That is why the others are not considered as numbers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DSL-2730U Router's Ipv6 Problem in Ubuntu]]></title>
    <link href="http://thefourtheye.in/2016/03/06/dsl-2730u-routers-ipv6-problem-in-ubuntu/"/>
    <updated>2016-03-06T20:32:00+05:30</updated>
    <id>http://thefourtheye.in/2016/03/06/dsl-2730u-routers-ipv6-problem-in-ubuntu</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Today I faced a very strange problem. I got a new Tata DOCOMO connection and I wanted to fetch upstream changes from a GitHub repository, with <code>git fetch --all</code>. But all I got was<pre>fatal: unable to access 'https://github.com/&lt;repo&gt;': Failed to connect to github.com port 443: Network is unreachable<br /></pre>I thought that the internet connection has a problem. But then I was able to <code>ping github.com</code> and access that site in my browser, although curl still failed.<br /><pre>➜  io.js git:(master) ✗ curl https://github.com<br />curl: (7) Failed to connect to github.com port 443: Network is unreachable</pre>At this point I became curious and tried out the verbose curl,<br /><pre>➜  io.js git:(master) ✗ curl -v https://github.com<br />* Rebuilt URL to: https://github.com/<br />* Hostname was NOT found in DNS cache<br />*   Trying 192.30.252.128...<br />*   Trying 64:ff9b::c01e:fc81...<br />* connect to 64:ff9b::c01e:fc81 port 443 failed: Network is unreachable<br />* Failed to connect to github.com port 443: Network is unreachable<br />* Closing connection 0<br />curl: (7) Failed to connect to github.com port 443: Network is unreachable</pre>Now, it figures out both the IPv4 address and the IPv6 address but favors IPv6 over IPv4. And it looks like, either the modem or the ISP don't support IPv6 based communication. I don't know how to confirm what the actual problem is. I tried to upgrade the firmware of my DSL-2730U router, by logging into 192.168.1.1. But it kept failing, saying the the firmware image file is too big.<br /><br />So, I decided to disable IPv6 in my Ubuntu machine and I followed the instructions given <a href="http://askubuntu.com/a/484487/147253">here</a> and it worked perfectly. Basically, I edited <code>/etc/sysctl.conf</code> file to include the following lines<pre># disable IPv6 on this machine<br />net.ipv6.conf.all.disable_ipv6 = 1<br />net.ipv6.conf.default.disable_ipv6 = 1<br />net.ipv6.conf.lo.disable_ipv6 = 1</pre>and then executed <code>sudo sysctl --system</code> and <code>sudo sysctl -p</code>.<br /></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sane ECMAScript 6 Generators]]></title>
    <link href="http://thefourtheye.in/2016/02/03/sane-ecmascript-6-generators/"/>
    <updated>2016-02-03T20:47:00+05:30</updated>
    <id>http://thefourtheye.in/2016/02/03/sane-ecmascript-6-generators</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">This post is cross posted in Medium, <a href="https://medium.com/@thefourtheye/sane-ecmascript-6-generators-7d1adcd85536#.cpvn9y4n8">here</a>.<br /><br />I recently found one interesting thing about ES6 Generators. I come from Python background and I understood generators as in Python. So, I expected the following Python code's equivalent ECMAScript 6 code also to work as well. <!--?prettify lang=python linenums=true?--><br /><pre class="prettyprint">>>> numbers = (num for num in range(10))<br />>>> for num in numbers:<br />...   if num == 3:<br />...     break<br />... <br />>>> next(numbers)<br />4<br /></pre>You can find the online demo for this Python program, <a href="http://ideone.com/9lYJOz">here</a>.<br /><br />But then, when I used Babel to transpile the following code and executed it<!--?prettify lang=javascript linenums=true?--><br /><pre class="prettyprint">function* NumberGenerator() {<br />  for (var i = 0; i < 10; i += 1) {<br />    yield i;<br />  }<br />}<br /><br />var numbers = NumberGenerator();<br /><br />for (var num of numbers) {<br />  if (num === 3) {<br />    break;<br />  }<br />}<br /><br />console.log(numbers.next());<br />// {"done":true}<br /></pre>You can find the online demo for this JavaScript program, made with Babel's REPL, <a href="https://babeljs.io/repl/#?experimental=true&evaluate=true&loose=false&spec=true&code=function*%20NumberGenerator()%20%7B%0A%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%2010%3B%20i%20%2B%3D%201)%20%7B%0A%20%20%20%20yield%20i%3B%0A%20%20%7D%0A%7D%0A%0Avar%20numbers%20%3D%20NumberGenerator()%3B%0A%0Afor%20(var%20num%20of%20numbers)%20%7B%0A%20%20if%20(num%20%3D%3D%3D%203)%20%7B%0A%20%20%20%20break%3B%0A%20%20%7D%0A%7D%0A%0Aconsole.log(numbers.next())%3B%0A">here</a>.  As you see here, when I broke out of the loop, the Generator Object got closed. This was pointed out to me by <a href="http://stackoverflow.com/users/785065/loganfsmyth">Logan Smyth</a> in Babel's Slack discussion. I was really surprised by this behavior and found the <a href="http://www.ecma-international.org/ecma-262/6.0/#sec-runtime-semantics-forin-div-ofbodyevaluation-lhs-stmt-iterator-lhskind-labelset">13.7.5.13 Runtime Semantics: ForIn/OfBodyEvaluation ( lhs, stmt, iterator, lhsKind, labelSet )</a> section in the ECMAScript 6 Specification, which says  <blockquote>If LoopContinues(result, labelSet) is false, return IteratorClose(iterator, UpdateEmpty(result, V)).</blockquote>I am not sure about the rationale behind that decision, but I am convinced that it would effectively limit the potential of the Generators. So I decided to fix this.  <h2>Sane Generators</h2>To close the iterator, <code>Iterator.prototype.return</code> is called. (At the time of this writing, not many JavaScript Engines support this function. You can find the support for this feature by popular engines, <a href="https://kangax.github.io/compat-table/es6/#test-generators_yield_*,_iterator_closing">here</a>.) So I decided to override that and allow the actual <code>return</code> function to be invoked only when explicitly called with an argument.<!--?prettify lang=javascript?--><pre class="prettyprint">function returnFunction(originalReturn, genObject) {<br />  return function(arg) {<br />    return arguments.length ? originalReturn.call(genObject, arg) : {<br />      done: false<br />    };<br />  };<br />}<br /><br />function SaneGenerator(genObject) {<br />  var originalReturn = genObject['return'];<br /><br />  if (typeof originalReturn === 'function') {<br />    Object.defineProperty(genObject, 'return', {<br />      value: returnFunction(originalReturn, genObject)<br />    });<br />  }<br /><br />  return genObject;<br />}</pre>You can see the actual and complete implementation in my GitHub repository, <a href="https://github.com/thefourtheye/sane-generator/blob/master/index.js">https://github.com/thefourtheye/sane-generator</a>.  Now, you can use the <code>SaneGenerator</code> like this <!--?prettify lang=javascript?--><pre class="prettyprint">function* NumberGenerator() {<br />  for (var i = 0; i < 10; i += 1) {<br />    yield i;<br />  }<br />}<br /><br />var numbers = SaneGenerator(NumberGenerator());<br /><br />for (var num of numbers) {<br />  if (num === 3) {<br />    break;<br />  }<br />}<br /><br />console.log(numbers.next());<br />// {"value":4,"done":false}<br /></pre>You can find the online demo for this JavaScript program, made with Babel's REPL, <a href="https://babeljs.io/repl/#?experimental=true&evaluate=true&loose=false&spec=true&code=function%20returnFunction(originalReturn%2C%20genObject)%20%7B%0A%20%20return%20function(arg)%20%7B%0A%20%20%20%20return%20arguments.length%20%3F%20originalReturn.call(genObject%2C%20arg)%20%3A%20%7B%0A%20%20%20%20%20%20done%3A%20false%0A%20%20%20%20%7D%3B%0A%20%20%7D%3B%0A%7D%0A%0Afunction%20SaneGenerator(genObject)%20%7B%0A%20%20var%20originalReturn%20%3D%20genObject%5B'return'%5D%3B%0A%0A%20%20if%20(typeof%20originalReturn%20%3D%3D%3D%20'function')%20%7B%0A%20%20%20%20Object.defineProperty(genObject%2C%20'return'%2C%20%7B%0A%20%20%20%20%20%20value%3A%20returnFunction(originalReturn%2C%20genObject)%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20return%20genObject%3B%0A%7D%0A%0Afunction*%20NumberGenerator()%20%7B%0A%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%2010%3B%20i%20%2B%3D%201)%20%7B%0A%20%20%20%20yield%20i%3B%0A%20%20%7D%0A%7D%0A%0Avar%20numbers%20%3D%20SaneGenerator(NumberGenerator())%3B%0A%0Afor%20(var%20num%20of%20numbers)%20%7B%0A%20%20if%20(num%20%3D%3D%3D%203)%20%7B%0A%20%20%20%20break%3B%0A%20%20%7D%0A%7D%0A%0Aconsole.log(numbers.next())%3B%0A">here</a>.  <h2>NPM Module</h2>This is available as an NPM module now. <a href="https://www.npmjs.com/package/sane-generator">https://www.npmjs.com/package/sane-generator</a> </div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text 3 Unhiding Menu in Ubuntu - Simpler Solution]]></title>
    <link href="http://thefourtheye.in/2016/01/10/sublime-text-3-unhiding-menu-in-ubuntu/"/>
    <updated>2016-01-10T20:44:00+05:30</updated>
    <id>http://thefourtheye.in/2016/01/10/sublime-text-3-unhiding-menu-in-ubuntu</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">The method which I mentioned in this <a href="http://www.thefourtheye.in/2014/01/un-hiding-menu-bar-in-sublime-text-3.html">blog post of mine</a>, solves the problem, but then you have to<br /><ol><li> Close the Sublime Text<br /><li> Fire up a terminal<br /><li> Execute a command or two<br /><li> Open Sublime Text again<br /></ol>Quite a lot of steps to do. But then I found a simpler solution today and it works like a charm for me. The solution is to use "Keyboard Shortcuts" :-) Let me explain in detail.  <ol><li> Click <code>Preferences</code> -> <code>Key Bindings - User</code><br /><li> In the window that opens, you need to add a new keyboard shortcut for the command "toggle_menu". For example, this is how my shortcuts looks like<br /><pre>[{"keys": ["ctrl+\\"], "command": "toggle_side_bar"},<br /> {"keys": ["ctrl+shift+m"], "command": "toggle_menu"}]</pre><li> Save the file and start doing your happy dance.<br /></ol>Now, you can simply press the keyboard shortcut whatever you choose to assign to toggle menu :-)  </div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python 3.5 and Django 1.7's HTMLParseError]]></title>
    <link href="http://thefourtheye.in/2015/02/15/python-35-and-django-17s-htmlparseerror/"/>
    <updated>2015-02-15T13:20:00+05:30</updated>
    <id>http://thefourtheye.in/2015/02/15/python-35-and-django-17s-htmlparseerror</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">I just updated my Python installation to 3.5 Alpha 1 and started with Django today and I hit a road block already. It all went fine, when I created the virtual environment and installed Django 1.7.4 in it. And then when I did <code>startproject</code>, I got <code>AttributeError: module 'html.parser' has no attribute 'HTMLParseError'</code>.<br /><pre class="prettyprint">(py3.5venv) ➜  myProject git:(master) ✗ django-admin.py startproject myProject<br />Traceback (most recent call last):<br />  File "/py3.5venv/bin/django-admin.py", line 5, in <module><br />    management.execute_from_command_line()<br />  File "/py3.5venv/lib/python3.5/site-packages/django/core/management/__init__.py", line 385, in execute_from_command_line<br />    utility.execute()<br />  File "/py3.5venv/lib/python3.5/site-packages/django/core/management/__init__.py", line 354, in execute<br />    django.setup()<br />  File "/py3.5venv/lib/python3.5/site-packages/django/__init__.py", line 18, in setup<br />    from django.utils.log import configure_logging<br />  File "/py3.5venv/lib/python3.5/site-packages/django/utils/log.py", line 13, in <module><br />    from django.views.debug import ExceptionReporter, get_exception_reporter_filter<br />  File "/py3.5venv/lib/python3.5/site-packages/django/views/debug.py", line 10, in <module><br />    from django.http import (HttpResponse, HttpResponseServerError,<br />  File "/py3.5venv/lib/python3.5/site-packages/django/http/__init__.py", line 4, in <module><br />    from django.http.response import (<br />  File "/py3.5venv/lib/python3.5/site-packages/django/http/response.py", line 13, in <module><br />    from django.core.serializers.json import DjangoJSONEncoder<br />  File "/py3.5venv/lib/python3.5/site-packages/django/core/serializers/__init__.py", line 23, in <module><br />    from django.core.serializers.base import SerializerDoesNotExist<br />  File "/py3.5venv/lib/python3.5/site-packages/django/core/serializers/base.py", line 6, in <module><br />    from django.db import models<br />  File "/py3.5venv/lib/python3.5/site-packages/django/db/models/__init__.py", line 6, in <module><br />    from django.db.models.query import Q, QuerySet, Prefetch  # NOQA<br />  File "/py3.5venv/lib/python3.5/site-packages/django/db/models/query.py", line 13, in <module><br />    from django.db.models.fields import AutoField, Empty<br />  File "/py3.5venv/lib/python3.5/site-packages/django/db/models/fields/__init__.py", line 18, in <module><br />    from django import forms<br />  File "/py3.5venv/lib/python3.5/site-packages/django/forms/__init__.py", line 6, in <module><br />    from django.forms.fields import *  # NOQA<br />  File "/py3.5venv/lib/python3.5/site-packages/django/forms/fields.py", line 18, in <module><br />    from django.forms.utils import from_current_timezone, to_current_timezone<br />  File "/py3.5venv/lib/python3.5/site-packages/django/forms/utils.py", line 15, in <module><br />    from django.utils.html import format_html, format_html_join, escape<br />  File "/py3.5venv/lib/python3.5/site-packages/django/utils/html.py", line 16, in <module><br />    from .html_parser import HTMLParser, HTMLParseError<br />  File "/py3.5venv/lib/python3.5/site-packages/django/utils/html_parser.py", line 12, in <module><br />    HTMLParseError = _html_parser.HTMLParseError<br />AttributeError: module 'html.parser' has no attribute 'HTMLParseError'</pre>Then <a href="http://stackoverflow.com/users/918959/antti-haapala">Antti Haapala</a> (a friend from <a href="http://chat.stackoverflow.com/rooms/6/python">Stakoverflow's Python Chat room</a>) found out that it is because <code class="prettyprint">HTMLParseError</code> is deprecated from Python 3.3 onwards and removed in Python 3.5, as per the <a href="https://docs.python.org/3/library/html.parser.html#html.parser.HTMLParseError">official documentation</a>. He continued the investigation and found out that django guys are already aware of this, as they have <a href="https://code.djangoproject.com/ticket/23763">a bug raised</a>, and <a href="https://github.com/django/django/commit/b07aa52e8a8e4c7fdc7265f75ce2e7992e657ae9">the fix has been already delivered</a> to the code repository.<br />Now, all we can do is, wait for the version of django which officially supports Python 3.5 or manually patch html_parser.py file as per the above shown fix. Even if we patch it manually, there is no guarantee that everything else will work fine.<br /></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu Overlapping Displays While Scaling Dual Monitor Setup]]></title>
    <link href="http://thefourtheye.in/2015/02/01/ubuntu-overlapping-displays-while-scaling-dual-monitor-setup/"/>
    <updated>2015-02-01T12:58:00+05:30</updated>
    <id>http://thefourtheye.in/2015/02/01/ubuntu-overlapping-displays-while-scaling-dual-monitor-setup</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Today, again I wanted to change my screen's display size, in my Ubuntu 14.04. This time I have a dual monitor setup and I tried all the commands I mentioned in my blog post <a href="http://www.thefourtheye.in/2013/05/ubuntu-scaling-display-zooming.html">Ubuntu scaling the display (Zooming)</a>.<br /><pre class="prettyprint">➜  ~  xrandr<br />Screen 0: minimum 8 x 8, current 2560 x 1024, maximum 16384 x 16384<br />VGA-0 connected 1280x1024+1280+0 (normal left inverted right x axis y axis) 376mm x 301mm<br />    1280x1024      60.0*+   75.0  <br />    1152x864       75.0  <br />    1024x768       75.0     60.0  <br />    800x600        75.0     60.3  <br />    640x480        75.0     59.9  <br />LVDS-0 connected (normal left inverted right x axis y axis)<br />    1600x900       60.0 +   40.0  <br />DP-0 connected primary 1280x1024+0+0 (normal left inverted right x axis y axis) 376mm x 301mm<br />    1280x1024      60.0*+   75.0  <br />    1152x864       75.0  <br />    1024x768       75.0     60.0  <br />    800x600        75.0     60.3  <br />    640x480        75.0     59.9  <br />DP-1 disconnected (normal left inverted right x axis y axis)<br />HDMI-0 disconnected (normal left inverted right x axis y axis)<br />DP-2 disconnected (normal left inverted right x axis y axis)<br />DP-3 disconnected (normal left inverted right x axis y axis)<br />➜  ~  xrandr --output DP-0 --scale 1.25x1.25<br />➜  ~  xrandr --output VGA-0 --scale 1.25x1.25<br />➜  ~  xrandr<br />Screen 0: minimum 8 x 8, current 2880 x 1280, maximum 16384 x 16384<br />VGA-0 connected 1600x1280+1280+0 (normal left inverted right x axis y axis) 376mm x 301mm<br />    1280x1024      60.0*+   75.0  <br />    1152x864       75.0  <br />    1024x768       75.0     60.0  <br />    800x600        75.0     60.3  <br />    640x480        75.0     59.9  <br />LVDS-0 connected (normal left inverted right x axis y axis)<br />    1600x900       60.0 +   40.0  <br />DP-0 connected primary 1600x1280+0+0 (normal left inverted right x axis y axis) 376mm x 301mm<br />    1280x1024      60.0*+   75.0  <br />    1152x864       75.0  <br />    1024x768       75.0     60.0  <br />    800x600        75.0     60.3  <br />    640x480        75.0     59.9  <br />DP-1 disconnected (normal left inverted right x axis y axis)<br />HDMI-0 disconnected (normal left inverted right x axis y axis)<br />DP-2 disconnected (normal left inverted right x axis y axis)<br />DP-3 disconnected (normal left inverted right x axis y axis)<br /></pre>Though it changes the display size, both the screens had overlapping images. After so much analysis, I found one inconsistency in the output of xrandr, before and after scaling. Note the first two lines.<br /><pre class="prettyprint">Screen 0: minimum 8 x 8, current 2560 x 1024, maximum 16384 x 16384<br />VGA-0 connected 1280x1024+1280+0 (normal left inverted right x axis y axis) 376mm x 301mm<br />...<br />Screen 0: minimum 8 x 8, current 2880 x 1280, maximum 16384 x 16384<br />VGA-0 connected 1600x1280+1280+0 (normal left inverted right x axis y axis) 376mm x 301mm<br /></pre>Individual screen's resolution has scaled to 1600x1280 from 1280x1024, but the total screen size is 2880 x 1280, also the screen's position is 1280x0 instead of 1600x0. So, to get over the overlapping problem, I used the following command, after reboot, and it worked<br /><pre class="prettyprint">➜  ~  xrandr --output DP-0 --scale 1.25x1.25 --pos 0x0 --output VGA-0 --scale 1.25x1.25 --pos 1600x0<br />➜  ~  xrandr<br />Screen 0: minimum 8 x 8, current 3200 x 1280, maximum 16384 x 16384<br />VGA-0 connected 1600x1280+1600+0 (normal left inverted right x axis y axis) 376mm x 301mm<br />    1280x1024      60.0*+   75.0  <br />    1152x864       75.0  <br />    1024x768       75.0     60.0  <br />    800x600        75.0     60.3  <br />    640x480        75.0     59.9  <br />LVDS-0 connected (normal left inverted right x axis y axis)<br />    1600x900       60.0 +   40.0  <br />DP-0 connected primary 1600x1280+0+0 (normal left inverted right x axis y axis) 376mm x 301mm<br />    1280x1024      60.0*+   75.0  <br />    1152x864       75.0  <br />    1024x768       75.0     60.0  <br />    800x600        75.0     60.3  <br />    640x480        75.0     59.9  <br />DP-1 disconnected (normal left inverted right x axis y axis)<br />HDMI-0 disconnected (normal left inverted right x axis y axis)<br />DP-2 disconnected (normal left inverted right x axis y axis)<br />DP-3 disconnected (normal left inverted right x axis y axis)<br /></pre>Now, you see that both the actual size of the screen and the starting position of the second screen is set properly.<br /><pre class="prettyprint">Screen 0: minimum 8 x 8, current 3200 x 1280, maximum 16384 x 16384<br />VGA-0 connected 1600x1280+1600+0 (normal left inverted right x axis y axis) 376mm x 301mm<br />...<br /></pre></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python's Venv Problem With Ensurepip in Ubuntu]]></title>
    <link href="http://thefourtheye.in/2014/12/30/Python-venv-problem-with-ensurepip-in-Ubuntu/"/>
    <updated>2014-12-30T14:52:00+05:30</updated>
    <id>http://thefourtheye.in/2014/12/30/Python-venv-problem-with-ensurepip-in-Ubuntu</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Ubuntu 14.04's Python 3.4 installation has a problem with <code>ensurepip</code> module, as described in <a href="https://bugs.launchpad.net/ubuntu/+source/python3.4/+bug/1290847">this bug</a>. So if you follow the steps mentioned in the <a href="https://docs.python.org/3/library/venv.html#creating-virtual-environments">official documentation</a>, you would see an error message like this<pre class="prettyprint">➜  Python  python3 -m venv py3.4venv<br />Error: Command '['/home/thefourtheye//py34venv/bin/python3', '-Im', 'ensurepip', '--upgrade', '--default-pip']' returned non-zero exit status 1<br /></pre>To resolve this problem, first install the <code>venv</code>, without <code>pip</code>, like this<br /><pre class="prettyprint">python3 -m venv py3.4venv --without-pip</pre>And then if you install <code>pip</code>, like this, it will still fail<pre class="prettyprint">(py3.4venv) ➜  py3.4venv  python -m ensurepip --upgrade<br />/home/thefourtheye/Python/py3.4venv/bin/python: No module named ensurepip<br />(py3.4venv) ➜  py3.4venv  python<br />Python 3.4.0 (default, Apr 11 2014, 13:05:11)<br />[GCC 4.8.2] on linux<br />Type "help", "copyright", "credits" or "license" for more information.<br />...<br /></pre>So, you need to install, <code>pip</code> separately, like mentioned in the <a href="http://pip.readthedocs.org/en/latest/installing.html#install-pip">pip's official documentation</a>. So, the actual list of steps go like this<br /><pre class="prettyprint">➜  Python  python3 -m venv py3.4venv --without-pip <br />➜  Python  cd py3.4venv <br />➜  py3.4venv  source bin/activate<br />(py3.4venv) ➜  py3.4venv  wget https://bootstrap.pypa.io/get-pip.py<br />--2014-12-30 14:35:34--  https://bootstrap.pypa.io/get-pip.py<br />Resolving bootstrap.pypa.io (bootstrap.pypa.io)... 103.245.222.175<br />Connecting to bootstrap.pypa.io (bootstrap.pypa.io)|103.245.222.175|:443... connected.<br />HTTP request sent, awaiting response... 200 OK<br />Length: 1581355 (1.5M) [text/x-python]<br />Saving to: ‘get-pip.py’<br /><br />100%[=====================================================================================================================>] 15,81,355    129KB/s   in 8.9s   <br /><br />2014-12-30 14:35:43 (173 KB/s) - ‘get-pip.py’ saved [1581355/1581355]<br /><br />(py3.4venv) ➜  py3.4venv  python get-pip.py <br />Collecting pip<br />  Downloading pip-6.0.3-py2.py3-none-any.whl (1.3MB)<br />    100% |################################| 1.3MB 139kB/s <br />Collecting setuptools<br />  Downloading setuptools-9.1-py2.py3-none-any.whl (552kB)<br />    100% |################################| 552kB 180kB/s <br />Installing collected packages: setuptools, pip<br /><br /><br />Successfully installed pip-6.0.3 setuptools-9.1<br />(py3.4venv) ➜  py3.4venv  deactivate <br />➜  py3.4venv  source bin/activate                      <br />(py3.4venv) ➜  py3.4venv  pip install django<br />Collecting django<br />  Using cached Django-1.7.1-py2.py3-none-any.whl<br />Installing collected packages: django<br /><br />Successfully installed django-1.7.1<br />(py3.4venv) ➜  py3.4venv  which pip<br />/home/thefourtheye/Python/py3.4venv/bin/pip<br />(py3.4venv) ➜  py3.4venv  <br /></pre></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sending POST/PUT Requests, With JSON Form Body, in Node.js]]></title>
    <link href="http://thefourtheye.in/2014/09/15/sending-postput-requests-with-json-form/"/>
    <updated>2014-09-15T21:05:00+05:30</updated>
    <id>http://thefourtheye.in/2014/09/15/sending-postput-requests-with-json-form</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Today one of my friends asked me to help him with sending a PUT request to a remote server, in Node.js. I started Googling and as usual I found this <a href="http://stackoverflow.com/a/11298667/1903116">excellent Stackoverflow answer</a>.<pre class="prettyprint">var http = require('http');<br /><br />var options = {<br />host: 'localhost',<br />path: '/users/1',<br />port: 3000,<br />method: 'PUT'<br />};<br /><br />var callback = function(response) {<br />var str = '';<br /><br />//another chunk of data has been recieved, so append it to `str`<br />response.on('data', function(chunk) {<br />str += chunk;<br />});<br /><br />//the whole response has been recieved, so we just print it out here<br />response.on('end', function() {<br />console.log(str);<br />});<br />};<br /><br />http.request(options, callback).end();<br /></pre>This works well. It creates a HTTP PUT request, to the server hosted at localhost on port 3000 and in the path '/users/1'. Now the interesting part is, normally, when we send PUT/POST requests, we used to send parameters. These parameters will be represented normally as key-value pairs. It will be easy to represent them in JSON format. So, the above code just needs few more changes to send the request with a JSON body.<pre class="prettyprint">var http = require('http');<br /><br />var bodyString = JSON.stringify({<br />    username: 'thefourtheye',<br />    password: '********'<br />});<br /><br />var headers = {<br />    'Content-Type': 'application/json',<br />    'Content-Length': bodyString.length<br />};<br /><br />var options = {<br />    host: 'localhost',<br />    path: '/users/1',<br />    port: 3000,<br />    method: 'PUT',<br />    headers: headers<br />};<br /><br />// callback is same as in the above seen example.<br />...<br />...<br /><br />http.request(options, callback).write(bodyString);<br /></pre>What we are actually doing here is, creating a JSON structure for the form body and then we are converting that to a valid JSON string. This is important, since we are sending the body as a JSON structure, it should conform to the JSON semantics. So, if you printed the bodyString, you would get something like this<pre class="prettyprint">{"username":"thefourtheye","password":"********"}<br /></pre>Now, we constructed the body string. But, how will we let the server know that the request is not over immediately after the HTTP Request line and the headers in the HTTP Request.<br /><br />Source: <a href="http://www.tcpipguide.com/free/t_HTTPRequestMessageFormat.htm">http://www.tcpipguide.com/free/t_HTTPRequestMessageFormat.htm</a><br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://www.tcpipguide.com/free/diagrams/httprequest.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://www.tcpipguide.com/free/diagrams/httprequest.png" /></a></div><br />As we see in the picture, after the headers section, there is the body section, which is where the body string we generated will be put in. But how will the web-server know the format of the body section and where it actually ends? That is why we put in two 'headers' in the 'options' object. <pre class="prettyprint">var headers = {<br />    'Content-Type': 'application/json',<br />    'Content-Length': bodyString.length<br />};<br /></pre><br />Here we specify the type of the body and the actual length of it. Okay, now that we specified the type and the length, how are we going to send the string? We simply write it to the 'ClientRequest' object returned by the 'http.request', like this <pre class="prettyprint">http.request(options, callback).write(bodyString);<br /></pre>That is it :-)<br /></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.js - Modules and Exports]]></title>
    <link href="http://thefourtheye.in/2014/03/01/nodejs-modules-and-exports/"/>
    <updated>2014-03-01T09:26:00+05:30</updated>
    <id>http://thefourtheye.in/2014/03/01/nodejs-modules-and-exports</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><p>I think most of us haven't understood the concept of modules in Node.js properly. Let us discuss the basics of that in this post.</p><h2>Module System</h2><p>In Node.js, when you create a new JavaScript file, that will be considered as a separate module. Inside that module, you can access the module itself with <code>module</code> object. You can check that, like this</p><pre class="prettyprint">console.log(module);</pre>which produces something like this<br /><pre class="prettyprint">{ id: '.',<br />  exports: {},<br />  parent: null,<br />  filename: '/home/thefourtheye/Desktop/Test.js',<br />  loaded: false,<br />  children: [],<br />  paths:<br />   [ '/home/thefourtheye/Desktop/node_modules',<br />     '/home/thefourtheye/node_modules',<br />     '/home/node_modules',<br />     '/node_modules' ] }<br /></pre><h2>exports and module.exports</h2><p>As you can see, it is just a plain JavaScript object. The important thing to be noted here is, <a href="http://nodejs.org/api/modules.html#modules_module_exports">the exports object in module</a>. In every module, JavaScript, by default, offers another variable called <a href="http://nodejs.org/api/modules.html#modules_exports_alias">exports</a>. That is nothing but the same object in module object of the same name. You can check that like this</p><pre class="prettyprint">exports.jabberwocky = "blah blah blah";<br />console.log(module.exports);            // { jabberwocky: 'blah blah blah' }<br /></pre><p>So, they are one and the same. But, when some other module requires this module, the object returned will be module.exports only. As long as you are augmenting module.exports and exports, there will be no problem. But when you assign something to either exports or module.exports, they no longer refer to the same object.</p><pre class="prettyprint">exports = {"king": "Sourav Ganguly"};<br />console.log(module.exports);           // {}<br />console.log(exports);                  // { king: 'Sourav Ganguly' }<br /></pre><p>You are making both exports and module.exports refer to different objects. So, when this module is exported, an empty object will be exported (remember, <b>only module.exports will be exported when required from other files</b>), even though we assigned a valid object to exports. So, care should be taken when you replace either of those objects. That is the reason why we often see something like this</p><pre class="prettyprint">exports = module.exports = ...<br /></pre><h2>Scope</h2><p>All the variables and functions declared within the module will be accessible only inside the module (as long as they are created with var keyword). Quoting from the <a href="http://nodejs.org/api/modules.html#modules_modules">modules documentation</a></p><blockquote>Variables local to the module will be private, as though the module was wrapped in a function.</blockquote>Happy modularizing the code :)<br /><br /></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bad UI Design - Twitter Account Page]]></title>
    <link href="http://thefourtheye.in/2014/01/28/bad-ui-design-twitter-account-page/"/>
    <updated>2014-01-28T20:34:00+05:30</updated>
    <id>http://thefourtheye.in/2014/01/28/bad-ui-design-twitter-account-page</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">I am going to consider this as a bug in Twitter. When I wanted to change my profile information (in Chrome 32, Ubuntu 13.04), I don't see a save or update button. Highly frustrating. Hope they fix it soon.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-3ZdOmDdBq1w/UufF1ibUsyI/AAAAAAAABck/kDtU8j1hoCk/s1600/Screenshot+from+2014-01-28+20:21:37_new.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-3ZdOmDdBq1w/UufF1ibUsyI/AAAAAAAABck/kDtU8j1hoCk/s640/Screenshot+from+2014-01-28+20:21:37_new.png" /></a></div></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Un-hiding Menu Bar in Sublime Text 3 - Ubuntu]]></title>
    <link href="http://thefourtheye.in/2014/01/05/un-hiding-menu-bar-in-sublime-text-3/"/>
    <updated>2014-01-05T12:13:00+05:30</updated>
    <id>http://thefourtheye.in/2014/01/05/un-hiding-menu-bar-in-sublime-text-3</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><p><b>Edit on 13-Jan-2016</b><br />I found another easy way to fix this problem. You can toggle the menu with a keyboard shortcut. You can read more about that in <a href="http://www.thefourtheye.in/2016/01/sublime-text-3-unhiding-menu-in-ubuntu.html">this blog post of mine</a>.<br /></p><hr /><p>It has been a very long wait to get the "Hide Menu" feature in Linux versions of Sublime Text 3. Finally it was released.  But the problem is, if it hidden once, there is no straight forward way to get the Menu back. I tried <kbd>F10</kbd>, <kbd>Alt</kbd> etc etc and nothing worked. So, I am sharing the trick which worked for me in this post.</p><p>It is simple. Close the Sublime Text 3, if it is open. Open<br /><pre class="prettyprint">~/.config/sublime-text-3/Local/Session.sublime_session</pre>in any of your favorite editors and then make sure that, "menu_visible" is "true" in all places in that file.<br /><pre class="prettyprint">"menu_visible": true,</pre>Thats it :) Open Sublime Text 3 now and ta-da... Menu is back :)<br /></p><hr/><p><b>Edit On Jan 10 - 2016</b><br /><br />As I was doing the same task more often, I decided that put that in a script, like this<br /><pre>export FILE=/home/thefourtheye/.config/sublime-text-3/Local/Session.sublime_session<br />export TEMP_FILE=/home/thefourtheye/.config/sublime-text-3/Local/Session.sublime_session.bkp<br />sed -e 's/"menu_visible": false/"menu_visible": true/g' $FILE > $TEMP_FILE<br />mv $TEMP_FILE FILE<br /></pre>and then I added that to my shell script's rc file as an alias like this<br /><pre>alias sublime_fix_menu=~/.sublime_fix_menu.zsh</pre>That's it :-) Now, I just have to close Sublime Text 3, type sublime_fix_menu in the shell, open Sublime again :-)<br /></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Dictionary Comprehension]]></title>
    <link href="http://thefourtheye.in/2013/11/17/python-dictionary-comprehension/"/>
    <updated>2013-11-17T13:35:00+05:30</updated>
    <id>http://thefourtheye.in/2013/11/17/python-dictionary-comprehension</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><p>Dictionary comprehensions were <a href="http://docs.python.org/2.7/whatsnew/2.7.html#other-language-changes" target="_blank">backported from Python 3.x to 2.7</a>. I always have believed that they are very pythonic and functional way of programming. Whenever comprehension is used, mutation of mutable elements (set, dict, list etc) becomes unnecessary and that definitely improves the performance as well. Lets start with a simple dictionary comprehension</p><pre class="prettyprint">>>> myMatrix = [[1, 100], [2, 200], [3, 300]]<br />>>> {key:value for key, value in myMatrix}<br />{1: 100, 2: 200, 3: 300}<br /></pre><p>Here we use unpacking from <code>myMatrix</code> list and we have used <code>{}</code> with <code>key:value</code> notation. This way, we can easily convert a list of lists to a dictionary with dictionary comprehension. Lets look at a complicated example</p><pre class="prettyprint">>>> myMatrix = [[100, 100], [20, 200], [30, 300]]<br />>>> {(key + 100 if key < 100 else key):(value/10 if value >= 200 else value/5) for key, value in myMatrix}<br />{120: 20, 130: 30, 100: 20}<br /></pre><p>Here we use <a href="http://docs.python.org/2/reference/expressions.html#conditional-expressions" target="_blank">conditional expressions</a> to dynamically decide what the key and the value are going to be.</p><h2>Performance</h2><pre class="prettyprint">>>> def changeDict():<br />...     newDict = {}<br />...     for key, value in myMatrix:<br />...         newDict[(key + 100 if key < 100 else key)] = value/10 if value >= 200 else value/5<br />...     return newDict<br />...     <br />>>> from timeit import timeit<br />>>> timeit("{(key + 100 if key < 100 else key):(value/10 if value >= 200 else value/5) for key, value in myMatrix}", setup="from __main__ import myMatrix")<br />0.7076609134674072<br />>>> timeit("changeDict()", setup="from __main__ import myMatrix, changeDict")<br />0.7484149932861328<br /></pre><p>The use of comprehension is slightly faster than the function which adds keys and values to an existing dictionary. This difference will be significant when the <code>myMatrix</code> has huge amount of data.</p></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zen of Python by Tim Peters]]></title>
    <link href="http://thefourtheye.in/2013/10/27/zen-of-python-by-tim-peters/"/>
    <updated>2013-10-27T17:20:00+05:30</updated>
    <id>http://thefourtheye.in/2013/10/27/zen-of-python-by-tim-peters</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Python has an Easter Egg :) just try to import <code>this</code> like this<br /><pre class="prettyprint">import this</pre>you ll get this<br /><pre>The Zen of Python, by Tim Peters<br /><br />Beautiful is better than ugly.<br />Explicit is better than implicit.<br />Simple is better than complex.<br />Complex is better than complicated.<br />Flat is better than nested.<br />Sparse is better than dense.<br />Readability counts.<br />Special cases aren't special enough to break the rules.<br />Although practicality beats purity.<br />Errors should never pass silently.<br />Unless explicitly silenced.<br />In the face of ambiguity, refuse the temptation to guess.<br />There should be one-- and preferably only one --obvious way to do it.<br />Although that way may not be obvious at first unless you're Dutch.<br />Now is better than never.<br />Although never is often better than *right* now.<br />If the implementation is hard to explain, it's a bad idea.<br />If the implementation is easy to explain, it may be a good idea.<br />Namespaces are one honking great idea -- let's do more of those!<br /></pre></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[File Upload With jQuery and Ajax]]></title>
    <link href="http://thefourtheye.in/2013/10/27/file-upload-with-jquery-and-ajax/"/>
    <updated>2013-10-27T16:30:00+05:30</updated>
    <id>http://thefourtheye.in/2013/10/27/file-upload-with-jquery-and-ajax</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">The requirement is simple. I should be able to upload files to the server with jQuery and ajax. Lets get started.<br /><pre class="prettyprint">&lt;html&gt;<br />   &lt;form&gt;<br />     File Description:&lt;input type="text" id="desc" /&gt;<br />     Choose File:&lt;input type="file" id="chosenFile" /&gt;<br />     &lt;input type="button" id="submitFile" value="submitTheFile" /&gt;<br />   &lt;/form&gt;<br />&lt;/html&gt;<br /></pre>Now, the real jQuery stuff<br /><pre class="prettyprint">&lt;script type="text/javascript"&gt;<br />    jQuery.noConflict();<br />    jQuery(document).ready(function() {<br />        jQuery("#submitFile").click(function() {<br />            jQuery.ajax({<br />                url: "[url to be submitted to]",<br />                type: "POST",<br />                contentType: false,<br />                processData: false,<br />                data: function() {<br />                    var data = new FormData();<br />                    data.append("fileDescription", jQuery("#desc").val());<br />                    data.append("chosenFile", jQuery("#chosenFile").get(0).files[0]);<br />                    return data;<br />                    // Or simply return new FormData(jQuery("form")[0]);<br />                }(),<br />                error: function(_, textStatus, errorThrown) {<br />                    alert("Error");<br />                    console.log(textStatus, errorThrown);<br />                },<br />                success: function(response, textStatus) {<br />                    alert("Success");<br />                    console.log(response, textStatus);<br />                }<br />            });<br />        });<br />    });<br />&lt;script&gt;<br /></pre>Important things to be noted here are<br /><pre class="prettyprint">contentType: false,<br />                processData: false,<br /></pre><p><code>contentType</code> will be determined automatically, so we don't have to set that explicitly and <code>processData</code> has to be false, otherwise the data will be processed and transformed into a query string, fitting to the default content-type "application/x-www-form-urlencoded". Next important thing is<br /><pre class="prettyprint">data: function() {<br />                    var data = new FormData();<br />                    data.append("fileDescription", jQuery("#desc").val());<br />                    data.append("chosenFile", jQuery("#chosenFile").get(0).files[0]);<br />                    return data;<br />                    // Or simply return new FormData(jQuery("form")[0]);<br />                }(),<br /></pre>You can read about FormData <a href="https://developer.mozilla.org/en-US/docs/Web/API/FormData">here</a>. We basically set the values being submitted. The first parameter is the key and the second parameter is the actual value to be passed. We can get the value of any form field with <pre class="prettyprint">jQuery("#desc").val()</pre>expect the files. If we use the same for files, we ll get just the file name instead of the file contents. So, we have to do something like <pre class="prettyprint">jQuery("#chosenFile").get(0).files[0]</pre>If we dont want to set individual values and want to pass all the fields in the form, we can simply do <pre class="prettyprint">data: new FormData(jQuery("form")[0])</pre>Thats it. Enjoy Ajaxified file upload :)<br /><b>References:</b><br /><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/FormData">FormData</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/File">File</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Using_files_from_web_applications">Using files from web applications</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/Using_FormData_Objects">Using FormData Objects</a></li></ul></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing the thefourtheyeEditor - Topcoder Plugin]]></title>
    <link href="http://thefourtheye.in/2013/09/07/installing-thefourtheyeeditor/"/>
    <updated>2013-09-07T13:38:00+05:30</updated>
    <id>http://thefourtheye.in/2013/09/07/installing-thefourtheyeeditor</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><p>thefourtheyeEditor is a very lightweight plugin for Topcoder Arena to participate in Single Round Matches, which can build testcases and lets the users to store the solutions as local files, so that any editor or IDE can be used to edit them. It also maintains the solutions in the directories named as the SRM's display name.</p><h2>Features</h2><ol><li>Very lightweight - Only one jar file. It doesn't depend on any other external jar files.</li><li>Organized solutions storage - Solutions will be stored as per the SRM names</li><li>File based configuration - Configurations are done in contestapplet.conf file. No need to use UI.</li></ol><h2>Installation</h2><ol><li>Download thefourtheyeEditor plugin (thefourtheyeEditor.jar) from <a href="https://github.com/thefourtheye/thefourtheyeEditor/releases/download/latest/thefourtheyeEditor.jar">https://github.com/thefourtheye/thefourtheyeEditor/releases/download/latest/thefourtheyeEditor.jar</a></li><li>Open topcoder contest applet and login with your username and password<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-pWmhTKJgMuU/UirZL3XombI/AAAAAAAABaQ/ElKofTOUZLo/s1600/topcoder+Login.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-pWmhTKJgMuU/UirZL3XombI/AAAAAAAABaQ/ElKofTOUZLo/s1600/topcoder+Login.png" /></a></div></li><li>Select <code>Editor</code> from the <code>Options</code> menu. You 'll see something like this<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-i-I4SZM6w0Y/UiraJxyoHjI/AAAAAAAABaY/rsfdcOmIVFc/s1600/topcoder+Editor+Preferences+Empty.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-i-I4SZM6w0Y/UiraJxyoHjI/AAAAAAAABaY/rsfdcOmIVFc/s1600/topcoder+Editor+Preferences+Empty.png" /></a></div></li><li>Click on <code>Add</code> and you 'll get a window like this. Fill in the details as you see in this picture. Actually you can give any name in the <code>Name</code>field and in <code>ClassPath</code> field, you have to locate the <code>thefourtheyeEditor.jar</code> file using Browse button. <code>EntryPoint</code> must be exactly the same as <code>thefourtheyeEditor.Main</code>.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-fYASUa_iIWo/Uiravmk9dJI/AAAAAAAABag/RhTfUoZX-1w/s1600/topcoder+plugin+Information.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-fYASUa_iIWo/Uiravmk9dJI/AAAAAAAABag/RhTfUoZX-1w/s1600/topcoder+plugin+Information.png" /></a></div></li><li>Once these steps are done, the Editor preferences page will look like this<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-NeWwv8YD2WE/Uird2isJrGI/AAAAAAAABas/tLVrupAZrj8/s1600/topcoder+After+plugin+installation.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-NeWwv8YD2WE/Uird2isJrGI/AAAAAAAABas/tLVrupAZrj8/s1600/topcoder+After+plugin+installation.png" /></a></div></li><li>Click on Save button and close that window. That's it. Installation is complete :)</li></ol></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu Bug Related to Network and Power]]></title>
    <link href="http://thefourtheye.in/2013/09/04/ubuntu-bug-related-to-network-and-power/"/>
    <updated>2013-09-04T18:32:00+05:30</updated>
    <id>http://thefourtheye.in/2013/09/04/ubuntu-bug-related-to-network-and-power</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><p>Last week, I faced this weird problem. When my laptop is not connected to a power source (not on battery), I could not connect to LAN network with my LAN cable, but Wi-Fi worked fine. I struggled a lot for a week and then I found a solution in the internet.<br /><p>All you have to do is to execute this one liner in your terminal.<br /><pre class="prettyprint">echo on > /sys/class/net/eth1/device/power/control<br /></pre>Here <code>eth1</code> corresponds to my second ethernet interface. It might vary from machine to machine. And if the directories <code>eth</code>, <code>device</code> and <code>power</code> dont exist, you might have to manually create them.<br /><br /></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compiling Node.js Scripts in Windows 7 With Sublime Text 3]]></title>
    <link href="http://thefourtheye.in/2013/07/29/Compiling-Node.js-scripts-in-Windows-7-with-Sublime-Text-3/"/>
    <updated>2013-07-29T19:56:00+05:30</updated>
    <id>http://thefourtheye.in/2013/07/29/Compiling-Node.js-scripts-in-Windows-7-with-Sublime-Text-3</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><p>This is a continuation of <a href="http://www.thefourtheye.in/2013/07/Compiling-Cpp-11-Programs-with-Sublime-Text-3.html">Compiling CPP 11 Programs with Sublime Text 3 in Ubuntu</a> where we saw how to configure Sublime Text 3 in Ubuntu 13.04 to compile C++ 11 programs. In this post, we ll see how to execute Node.js programs in Windows 7 machine's Sublime Text 3. I am going to assume that Node.js is installed properly and PATH variable is also set properly. If you are using Windows Installer, we dont have to worry about this. <br /><ol><li>We need to create the following directory structure in the User's home directory <code>AppData\Roaming\Sublime Text 3\Packages\JS\</code>. In my machine, home directory is <code>C:\Users\[username]</code>. To know the current user's home directory, open <code>Cmd.exe</code> and type <code>echo %userprofile%</code>. <br /><li>In that directory, create a file called "JS.sublime-build". So, the location of the file from the home directory is <code>AppData\Roaming\Sublime Text 3\Packages\JS\JS.sublime-build</code> You can name the sublime-build file as anything you want. I have simply named it here as JS.<br /><li>Copy and paste the following text in to it.<br /><pre class="prettyprint">{<br /> "cmd": ["node.exe", "${file}"],<br /> "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",<br /> "working_dir": "${file_path}",<br /> "selector": "source.js",<br /> "variants":<br /> [<br />  {<br />   "name": "Run",<br />   "cmd":["node.exe", "${file}"]<br />  }<br /> ]<br />}<br /></pre><li>Thats it. Open Sublime Text 3. Click on Tools->Build System. You should see JS as one of the options. From now on, you can execute node.js scripts simply by pressing Ctrl-B.<br /></ol></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compiling C++11 Programs With Sublime Text 3]]></title>
    <link href="http://thefourtheye.in/2013/07/21/Compiling-Cpp-11-Programs-with-Sublime-Text-3/"/>
    <updated>2013-07-21T16:41:00+05:30</updated>
    <id>http://thefourtheye.in/2013/07/21/Compiling-Cpp-11-Programs-with-Sublime-Text-3</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><p>For <b>Windows 7</b>, you may want to read this post <a href="http://www.thefourtheye.in/2013/07/Compiling-Node.js-scripts-in-Windows-7-with-Sublime-Text-3.html">http://www.thefourtheye.in/2013/07/Compiling-Node.js-scripts-in-Windows-7-with-Sublime-Text-3.html</a><br /><p>Today I installed Sublime Text 3's public beta on my Ubuntu 13 and the first thing I noticed is, the inability to compile C++ 11 programs. The obvious problem is, it was missing <code>-std=c++0x</code> parameter to g++. I tried to figure out how to edit the build parameters of Sublime. After an hour's struggle managed to figure out.<br /><ol><li>You need to create the following file <code>~/.config/sublime-text-3/Packages/C++/C++.sublime-build</code>. The <code>~</code> refers to the home directory of the current user.<br /><li>Now insert the below seen text to that file<br /><pre class="prettyprint">{<br /> "cmd": ["g++", "-std=c++0x", "${file}", "-o", "${file_path}/${file_base_name}"],<br /> "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",<br /> "working_dir": "${file_path}",<br /> "selector": "source.c, source.c++",<br /> "variants":<br /> [<br />   {<br />     "name": "Run",<br />     "cmd":["bash", "-c", "g++ -std=c++0x '${file}' -o '${file_path}/${file_base_name}' && '${file_path}/${file_base_name}'"]<br />   }<br /> ]<br />}<br /></pre><li>Save this file and close it. Sublime will pick up the changes immediately.<br /></ol>This will take care of compiling C++ 11 programs. </div></div>
]]></content>
  </entry>
  
</feed>
