<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sublime | thefourtheye's weblog]]></title>
  <link href="http://thefourtheye.in/blog/categories/sublime/atom.xml" rel="self"/>
  <link href="http://thefourtheye.in/"/>
  <updated>2016-11-13T02:40:52+05:30</updated>
  <id>http://thefourtheye.in/</id>
  <author>
    <name><![CDATA[Sakthipriyan Vairamani (thefourtheye)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sublime Text 3 Unhiding Menu in Ubuntu - Simpler Solution]]></title>
    <link href="http://thefourtheye.in/2016/01/10/sublime-text-3-unhiding-menu-in-ubuntu/"/>
    <updated>2016-01-10T20:44:00+05:30</updated>
    <id>http://thefourtheye.in/2016/01/10/sublime-text-3-unhiding-menu-in-ubuntu</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">The method which I mentioned in this <a href="http://www.thefourtheye.in/2014/01/un-hiding-menu-bar-in-sublime-text-3.html">blog post of mine</a>, solves the problem, but then you have to<br /><ol><li> Close the Sublime Text<br /><li> Fire up a terminal<br /><li> Execute a command or two<br /><li> Open Sublime Text again<br /></ol>Quite a lot of steps to do. But then I found a simpler solution today and it works like a charm for me. The solution is to use "Keyboard Shortcuts" :-) Let me explain in detail.  <ol><li> Click <code>Preferences</code> -> <code>Key Bindings - User</code><br /><li> In the window that opens, you need to add a new keyboard shortcut for the command "toggle_menu". For example, this is how my shortcuts looks like<br /><pre>[{"keys": ["ctrl+\\"], "command": "toggle_side_bar"},<br /> {"keys": ["ctrl+shift+m"], "command": "toggle_menu"}]</pre><li> Save the file and start doing your happy dance.<br /></ol>Now, you can simply press the keyboard shortcut whatever you choose to assign to toggle menu :-)  </div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Un-hiding Menu Bar in Sublime Text 3 - Ubuntu]]></title>
    <link href="http://thefourtheye.in/2014/01/05/un-hiding-menu-bar-in-sublime-text-3/"/>
    <updated>2014-01-05T12:13:00+05:30</updated>
    <id>http://thefourtheye.in/2014/01/05/un-hiding-menu-bar-in-sublime-text-3</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><p><b>Edit on 13-Jan-2016</b><br />I found another easy way to fix this problem. You can toggle the menu with a keyboard shortcut. You can read more about that in <a href="http://www.thefourtheye.in/2016/01/sublime-text-3-unhiding-menu-in-ubuntu.html">this blog post of mine</a>.<br /></p><hr /><p>It has been a very long wait to get the "Hide Menu" feature in Linux versions of Sublime Text 3. Finally it was released.  But the problem is, if it hidden once, there is no straight forward way to get the Menu back. I tried <kbd>F10</kbd>, <kbd>Alt</kbd> etc etc and nothing worked. So, I am sharing the trick which worked for me in this post.</p><p>It is simple. Close the Sublime Text 3, if it is open. Open<br /><pre class="prettyprint">~/.config/sublime-text-3/Local/Session.sublime_session</pre>in any of your favorite editors and then make sure that, "menu_visible" is "true" in all places in that file.<br /><pre class="prettyprint">"menu_visible": true,</pre>Thats it :) Open Sublime Text 3 now and ta-da... Menu is back :)<br /></p><hr/><p><b>Edit On Jan 10 - 2016</b><br /><br />As I was doing the same task more often, I decided that put that in a script, like this<br /><pre>export FILE=/home/thefourtheye/.config/sublime-text-3/Local/Session.sublime_session<br />export TEMP_FILE=/home/thefourtheye/.config/sublime-text-3/Local/Session.sublime_session.bkp<br />sed -e 's/"menu_visible": false/"menu_visible": true/g' $FILE > $TEMP_FILE<br />mv $TEMP_FILE FILE<br /></pre>and then I added that to my shell script's rc file as an alias like this<br /><pre>alias sublime_fix_menu=~/.sublime_fix_menu.zsh</pre>That's it :-) Now, I just have to close Sublime Text 3, type sublime_fix_menu in the shell, open Sublime again :-)<br /></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compiling Node.js Scripts in Windows 7 With Sublime Text 3]]></title>
    <link href="http://thefourtheye.in/2013/07/29/Compiling-Node.js-scripts-in-Windows-7-with-Sublime-Text-3/"/>
    <updated>2013-07-29T19:56:00+05:30</updated>
    <id>http://thefourtheye.in/2013/07/29/Compiling-Node.js-scripts-in-Windows-7-with-Sublime-Text-3</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><p>This is a continuation of <a href="http://www.thefourtheye.in/2013/07/Compiling-Cpp-11-Programs-with-Sublime-Text-3.html">Compiling CPP 11 Programs with Sublime Text 3 in Ubuntu</a> where we saw how to configure Sublime Text 3 in Ubuntu 13.04 to compile C++ 11 programs. In this post, we ll see how to execute Node.js programs in Windows 7 machine's Sublime Text 3. I am going to assume that Node.js is installed properly and PATH variable is also set properly. If you are using Windows Installer, we dont have to worry about this. <br /><ol><li>We need to create the following directory structure in the User's home directory <code>AppData\Roaming\Sublime Text 3\Packages\JS\</code>. In my machine, home directory is <code>C:\Users\[username]</code>. To know the current user's home directory, open <code>Cmd.exe</code> and type <code>echo %userprofile%</code>. <br /><li>In that directory, create a file called "JS.sublime-build". So, the location of the file from the home directory is <code>AppData\Roaming\Sublime Text 3\Packages\JS\JS.sublime-build</code> You can name the sublime-build file as anything you want. I have simply named it here as JS.<br /><li>Copy and paste the following text in to it.<br /><pre class="prettyprint">{<br /> "cmd": ["node.exe", "${file}"],<br /> "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",<br /> "working_dir": "${file_path}",<br /> "selector": "source.js",<br /> "variants":<br /> [<br />  {<br />   "name": "Run",<br />   "cmd":["node.exe", "${file}"]<br />  }<br /> ]<br />}<br /></pre><li>Thats it. Open Sublime Text 3. Click on Tools->Build System. You should see JS as one of the options. From now on, you can execute node.js scripts simply by pressing Ctrl-B.<br /></ol></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compiling C++11 Programs With Sublime Text 3]]></title>
    <link href="http://thefourtheye.in/2013/07/21/Compiling-Cpp-11-Programs-with-Sublime-Text-3/"/>
    <updated>2013-07-21T16:41:00+05:30</updated>
    <id>http://thefourtheye.in/2013/07/21/Compiling-Cpp-11-Programs-with-Sublime-Text-3</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><p>For <b>Windows 7</b>, you may want to read this post <a href="http://www.thefourtheye.in/2013/07/Compiling-Node.js-scripts-in-Windows-7-with-Sublime-Text-3.html">http://www.thefourtheye.in/2013/07/Compiling-Node.js-scripts-in-Windows-7-with-Sublime-Text-3.html</a><br /><p>Today I installed Sublime Text 3's public beta on my Ubuntu 13 and the first thing I noticed is, the inability to compile C++ 11 programs. The obvious problem is, it was missing <code>-std=c++0x</code> parameter to g++. I tried to figure out how to edit the build parameters of Sublime. After an hour's struggle managed to figure out.<br /><ol><li>You need to create the following file <code>~/.config/sublime-text-3/Packages/C++/C++.sublime-build</code>. The <code>~</code> refers to the home directory of the current user.<br /><li>Now insert the below seen text to that file<br /><pre class="prettyprint">{<br /> "cmd": ["g++", "-std=c++0x", "${file}", "-o", "${file_path}/${file_base_name}"],<br /> "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",<br /> "working_dir": "${file_path}",<br /> "selector": "source.c, source.c++",<br /> "variants":<br /> [<br />   {<br />     "name": "Run",<br />     "cmd":["bash", "-c", "g++ -std=c++0x '${file}' -o '${file_path}/${file_base_name}' && '${file_path}/${file_base_name}'"]<br />   }<br /> ]<br />}<br /></pre><li>Save this file and close it. Sublime will pick up the changes immediately.<br /></ol>This will take care of compiling C++ 11 programs. </div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Configuring CodeIntel Auto Completion]]></title>
    <link href="http://thefourtheye.in/2013/05/25/sublime-configuring-codeintel/"/>
    <updated>2013-05-25T12:54:00+05:30</updated>
    <id>http://thefourtheye.in/2013/05/25/sublime-configuring-codeintel</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Unarguably Sublime is one of the best text editors and with its ability to extend with python scripts, gifts itself a lot of power. Here lets see one of those extensions which allow code completion. Normally, sublime provides code completion for the words in the current file being edited. Codeintel allows the user to get code completion feature of the respective languages.<br /><br /><h2>Installation</h2>Lets install CodeIntel, through Package Control plugin. To install Package Control plugin, do the following steps. Here is the author's <a href="http://wbond.net/sublime_packages/package_control/installation">page</a>. Quoting from the source website<br /><br /><blockquote>Installation is through the Sublime Text 2 console. This is accessed via the ctrl+` shortcut. Once open, paste the following command into the console.<br /><br /><div style="background-color:black; color: white; padding: 25px">import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')</div></blockquote><br />After installing it, Press Shift+Ctrl+P or click on Tools->Command Palette. In the window that opens up, type Install Package. In the text box which you see after that, type SublimeCodeIntel and click on it to install it. You are done with the installation of CodeIntel.<br /><br /><h2>Configuration</h2>The following information is taken from the README.rst file. Open ~/.codeintel/config file in your favourite text editor, most likely Sublime. Pick your language from the list below and copy paste only the blocks for the languages of your choice.<br /><br /><pre class="prettyprint">    {<br />        "PHP": {<br />            "php": '/usr/bin/php',<br />            "phpExtraPaths": [],<br />            "phpConfigFile": 'php.ini'<br />        },<br />        "JavaScript": {<br />            "javascriptExtraPaths": []<br />        },<br />        "Perl": {<br />            "perl": "/usr/bin/perl",<br />            "perlExtraPaths": []<br />        },<br />        "Ruby": {<br />            "ruby": "/usr/bin/ruby",<br />            "rubyExtraPaths": []<br />        },<br />        "Python": {<br />            "python": '/usr/bin/python',<br />            "pythonExtraPaths": []<br />        },<br />        "Python3": {<br />            "python": '/usr/bin/python3',<br />            "pythonExtraPaths": []<br />        }<br />    }<br /></pre><br />For example, I like to use python and my config file looks like this<br /><pre class="prettyprint">{<br /> "Python": {<br />     "python": '/usr/bin/python',<br />     "pythonExtraPaths": []<br /> },<br />}<br /></pre><br />Thats it. Restart your sublime, type code and press Alt + / to see the Auto completion at work.<br /><br /></div></div>

]]></content>
  </entry>
  
</feed>
